import sysimport socket
import threading

def server_loop(local_host,local_port,remote_host,remote_port,receive_first):
  server = socket.socket(socket.Af_INET, socket.SOCK_STREAM)

  try:
    server.bind((local_host,local_port))
  except:
    print "[!!] Failed to listen on %s:%d" % (local_host, local_port)
    print "[!!] Check for other listening sockets or correct sys.exit(0)"
    sys.exit(0)
    print "[*] Listening on %s:%d" % (local_host,loacl_port)

    server.listen(5)

    while True:
        client_socket, addr = server.accept()
        print "[==>] REceived ncoming connection from %s:%d" % (addr[0],addr[1])
        args=(client_socket,remote_host,remote_port,receive_first))
        proxy_thread.start()

def main():
    if len(sys.argv[1:]) != 5:
        print "Usage: ./proxy.py [localhost] [localport] [remotehost] [remoteport] [receive_first]"
        print "Example: ./proxy.py 127.0.01 9000 10.12.132.1 9000 True"
        sys.exit()

    local_host = sys.argv[1]
    local_port = int(sys.argv[2])

    #setup remote target
    remote_host = sys.argv[3]
    remote_port = int(sys.argv[4])

    #This tells out proxy to connect and receive data
    #before sending to the remote host
    receive_first = sys.argv[5]

    if "True" in receive_first:
        receive_first = True
    else:
        receive_first = False

    #now spin up our listening socket
    server_loop(local_host,local_port,remote_host,remote_port,receive_first)

main()
        
def proxy_handler(client_socket, remote_host, remote_port, receive_first):
    remote_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    remote_sockjet.connect((remote_host,remote_port))

    #receive data from the remote end if necessart
    if receive_first:
        remove_buffer = response_handler(remote_socket)



